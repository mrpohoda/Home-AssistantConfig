- platform: history_stats
  name: TV Today
  entity_id: media_player.55pus6561_12
  state: 'playing'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

# - platform: command_line
#   name: Nmap modbus Service
#   command: /bin/bash -c "(echo > /dev/tcp/192.168.68.72/502) > /dev/null 2>&1 && echo Up || echo Down"
#   value_template: '{{ value }}'

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /config
    - type: disk_use
    - type: disk_free
    - type: memory_use_percent    
    - type: memory_use    
    - type: memory_free   
    - type: swap_use_percent    
    - type: swap_use    
    - type: swap_free   
    - type: load_1m   
    - type: load_5m   
    - type: load_15m    
    - type: processor_use   
    - type: processor_temperature  
    - type: last_boot

# REST sensor for getting current OTE prices from API
- platform: rest
  resource: https://europe-central2-norse-fiber-371513.cloudfunctions.net/ote
  scan_interval: 3600
  name: OTE rates
  unique_id: ote_rates_123456
  value_template: '1'  # dummy value, not used; avoids the "State max length is 255 characters" error
  json_attributes:
    - data
    - min_day_1_hour
    - min_day_2_hour
    - min_night_1_hour
    - min_night_2_hour

# Template sensors for OTE prices automations
- platform: template
  sensors: 
    # OTE price for current hour
    ote_current_price:
      value_template: >
        {% set newdate = now() %}
        {{ states.sensor.ote_rates.attributes.data[newdate.hour|string] }}
      icon_template: "mdi:cash"
      device_class: monetary
    
    # OTE minimum price and time during the day
    ote_min_day_price:
      value_template: >
        {{ states.sensor.ote_rates.attributes.data[states.sensor.ote_rates.attributes.min_day_2_hour|string] }}
      icon_template: "mdi:cash"
      device_class: monetary
    ote_min_day_time:
      value_template: >
        {{ states.sensor.ote_rates.attributes.min_day_2_hour|string + ':00' }}
      icon_template: "mdi:calendar-clock"
    ote_min_day_now:
      friendly_name: "OTE Min Day Is Now"
      value_template: >
        {% set day_hour = states('sensor.ote_min_day_time').split(':')[0]|int %}
        {{ now().hour == day_hour }}
    
    # OTE minimum price and time during the night
    ote_min_night_price:
      value_template: >
        {% set night_hour = states.sensor.ote_rates.attributes.min_night_2_hour %}
        {% if night_hour > 999 %}
            {{ states('sensor.ote_min_night_price') }}
        {% else %}
            {{ states.sensor.ote_rates.attributes.data[night_hour|string] }}
        {% endif %}
      icon_template: "mdi:cash"
      device_class: monetary
    ote_min_night_time:
      value_template: >
        {% set night_hour = states.sensor.ote_rates.attributes.min_night_2_hour %}
        {% if night_hour > 999 %}
            {{ states('sensor.ote_min_night_time') }}
        {% else %}
            {% if night_hour > 24 %}
                {% set night_hour = night_hour - 24 %}
            {% endif %}
            {{ night_hour|string + ':00' }}
        {% endif %}
      icon_template: "mdi:calendar-clock"
    ote_min_night_now:
      friendly_name: "OTE Min Night Is Now"
      value_template: >
        {% set night_hour = states('sensor.ote_min_night_time').split(':')[0]|int %}
        {{now().hour == night_hour}}
    
    # OTE data for chart
    ote_chart_data:
      friendly_name: "OTE Chart Data"
      value_template: "{{ states('sensor.current_ote_energy_cost') }}"
      attribute_templates:
        data: >
          {% set data = namespace(numbers=[]) %}
          {% set items = states.sensor.ote_rates.attributes.data %}
          {% for i in items %}
            {% set i = i|int %}
            {% if i > 23 %}
              {% set data.hour = i - 24 %}
            {% else %}
              {% set data.hour = i %}
            {% endif %}
            {% set data.current_date = today_at(data.hour ~ ":00") %}
            {% if i > 23 %}
              {% set data.current_date = data.current_date + timedelta(days=1) %}
            {% endif %}
            {% set data.numbers = data.numbers + [[data.current_date.strftime('%Y-%m-%d %H:%M:%S'), items[i|string]]] %}
          {% endfor %}
          {{ data.numbers }}
        icon_template: "mdi:cash"


